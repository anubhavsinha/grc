-show_edit = true if local_assigns[:show_edit].nil?
-expanded = false if local_assigns[:expanded].nil?
-editable_notes = false if local_assigns[:editable_notes].nil?

=walk_slug_tree(Directive.slugtree(sections), :expanded => expanded, :li_class => 'section') do |item, step, children|
  -content_id = "content_#{rand(36**8).to_s(36)}" # unique ID for toggle
  -has_children = children.size > 0

  .item-main{ :'data-object-id' => item.id, :'data-object-type' => item.class.name.underscore }
    .openclose{ :class => [!has_children && 'lastchild', expanded && 'active'] }
    .item-title
      .row-fluid
        =render :partial => 'object_leaf', :locals => { :instance => item, :include_notes => true, :editable_notes => editable_notes }
        .span2
          .objects-count
            -controls = item.linked_controls
            -popover_content = capture_haml do
              -if !controls.empty?
                %ul.tree-structure.simple
                  -controls.each do |control|
                    %li.control
                      .item-main
                        .item-title
                          .row-fluid
                            .span12
                              .oneline
                                %a{ :href => flow_control_path(control) }=control.slug
              -else
                .rtf
                  %p.no-data
                    No controls are linked to this directive

            -data_popover_trigger = { :placement => "right",
                                 :'popover-trigger' =>  "sticky-hover",
                                 :'original-title' => "<div class='row-fluid'><div class='span12'><h3><i class='grcicon-control-color'></i>Linked Controls</h3></div></div>".html_safe,
                                 :content => popover_content }
            %a.controls-count.controllist{:href => mapping_section_dialog_path(item),
                           :data => data_popover_trigger}
              %i.grcicon-control-color
              -if !controls.empty?
                =controls.size
              -elsif item.na?
                %strong.warning N/A
              -else
                %strong.error 0

            -#status_class = (controls.empty? && !item.na?) ? 'badge-important' : 'badge-warning'
            -#%a.controllist.attached.badge{:href => mapping_section_dialog_path(item),
                                          :class => status_class,
                                          :'data' => controls.empty? || { :placement => "right",
                                              :'popover-trigger' =>  "sticky-hover",
                                              :'original-title' => "Linked Controls",
                                              :content => popover_content } }
              -controls = item.linked_controls
              -if !controls.empty?
                =controls.size
              -elsif item.na?
                %span.normal-font N/A
              -else
                %strong 0
      .item-actions
        -if show_edit
          %a.btn.btn-mini.pull-right{ :href => edit_flow_section_path(item), :'data-toggle' => 'modal-ajax-form', :'data-modal-reset' => 'reset', :'data-form-target' => 'refresh', :'data-dirty' => "#regulations, #combo", :rel => 'tooltip', :title => "Edit #{item.directive.section_meta_kind.to_s.titleize}" }
            %i.grcicon-edit
